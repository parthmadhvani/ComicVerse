AWSTemplateFormatVersion: '2010-09-09'
Description: ComicVerse

Parameters:
  Stage:
    Type: String
    Default: dev-1
    Description: Deployment stage (e.g., dev-1, prod)

  RoleARN:
    Type: String
    Default: "arn:aws:iam::998689998714:role/LabRole"
    Description: ARN of the IAM Role

  VpcCIDR:
    Type: String
    Default: "10.0.0.0/16"
    Description: CIDR block for the VPC

  PublicSubnetCIDR:
    Type: String
    Default: "10.0.1.0/24"
    Description: CIDR block for the public subnet

  PrivateSubnetCIDR:
    Type: String
    Default: "10.0.2.0/24"
    Description: CIDR block for the private subnet

  AvailabilityZone:
    Type: String
    Default: "a"
    Description: Availability Zone for the subnets

Resources:
  # VPC
  ComicVerseVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-vpc-${Stage}"

  # Internet Gateway
  ComicVerseInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-internet-gateway-${Stage}"

  # Attach Internet Gateway to VPC
  ComicVerseVPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref ComicVerseVPC
      InternetGatewayId: !Ref ComicVerseInternetGateway

  # Public Subnet
  ComicVersePublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ComicVerseVPC
      CidrBlock: !Ref PublicSubnetCIDR
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone}"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-public-subnet-${Stage}"

  # Private Subnet
  ComicVersePrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref ComicVerseVPC
      CidrBlock: !Ref PrivateSubnetCIDR
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone}"
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-private-subnet-${Stage}"

  # Route Table for Public Subnet
  ComicVersePublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref ComicVerseVPC
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-public-route-table-${Stage}"

  # Route to Internet Gateway
  ComicVersePublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: ComicVerseVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref ComicVersePublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref ComicVerseInternetGateway

  # Associate Public Subnet with Route Table
  ComicVersePublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref ComicVersePublicSubnet
      RouteTableId: !Ref ComicVersePublicRouteTable

  # Security Group
  ComicVerseEC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for ComicVerse EC2 instance"
      VpcId: !Ref ComicVerseVPC
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 80
          IpProtocol: "tcp"
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          FromPort: 22
          IpProtocol: "tcp"
          ToPort: 22
        - CidrIp: "0.0.0.0/0"
          FromPort: 3000
          IpProtocol: "tcp"
          ToPort: 3000
      SecurityGroupEgress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-ec2-sg-${Stage}"

  # EC2 Instance
  ComicVerseEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0cd59ecaf368e5ccf" # ubuntu server
      InstanceType: "t3.small"
      KeyName: "comic-verse"
      AvailabilityZone: !Sub "${AWS::Region}${AvailabilityZone}"
      Tenancy: "default"
      SubnetId: !Ref ComicVersePublicSubnet
      EbsOptimized: true
      SecurityGroupIds:
        - !Ref ComicVerseEC2SecurityGroup
      SourceDestCheck: true
      BlockDeviceMappings:
        - DeviceName: "/dev/sdf"
          Ebs:
            Encrypted: false
            VolumeSize: 8
            SnapshotId: "snap-0d4808a4a367518ba"
            VolumeType: "gp2"
            DeleteOnTermination: true
      Tags:
        - Key: "Name"
          Value: !Sub "comicverse-ec2-${Stage}"
      HibernationOptions:
        Configured: false
      CpuOptions:
        CoreCount: 1
        ThreadsPerCore: 2
      EnclaveOptions:
        Enabled: false
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt install npm -y
          sudo npm install -g npm@latest
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt install -y nodejs
          sudo apt install nginx -y
          sudo mkdir /var/www/html/comic-verse
          echo 'server {
            listen 80;
            listen [::]:80;
            root /var/www/html/comic-verse/build;

            #react app
            location / {
              try_files $uri /index.html;
            }
          }' | sudo tee /etc/nginx/conf.d/react.conf >/dev/null
          cd /home/ubuntu
          mkdir my-app
          cd my-app
          sudo git clone https://github.com/nikul014/cloud_term_nikul.git
          cd cloud_term_nikul
          cd comic-book-app
          sudo npm install
          sudo npm run build
          sudo cp -R build/ /var/www/html/comic-verse/
          echo '
          user www-data;
          worker_processes auto;
          pid /run/nginx.pid;
          include /etc/nginx/modules-enabled/*.conf;

          events {
            worker_connections 768;
          }

          http {
            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
            ssl_prefer_server_ciphers on;

            access_log /var/log/nginx/access.log;
            error_log /var/log/nginx/error.log;

            gzip on;

            include /etc/nginx/conf.d/*.conf;
          }' | sudo tee /etc/nginx/nginx.conf >/dev/null
          sudo nginx -t && sudo systemctl reload nginx

Outputs:
  VPCId:
    Description: "ID of the VPC"
    Value: !Ref ComicVerseVPC

  PublicSubnetId:
    Description: "ID of the Public Subnet"
    Value: !Ref ComicVersePublicSubnet

  PrivateSubnetId:
    Description: "ID of the Private Subnet"
    Value: !Ref ComicVersePrivateSubnet

  InternetGatewayId:
    Description: "ID of the Internet Gateway"
    Value: !Ref ComicVerseInternetGateway

  SecurityGroupId:
    Description: "ID of the Security Group"
    Value: !Ref ComicVerseEC2SecurityGroup

  EC2InstanceId:
    Description: "ID of the EC2 Instance"
    Value: !Ref ComicVerseEC2Instance
